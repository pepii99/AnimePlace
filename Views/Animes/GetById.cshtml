@using AnimePlace.Models.ViewModels
@model SingleAnimeViewModel
@{
    this.ViewData["Title"] = @Model.Name;
}

<div>
    <img src="~/img/Borders/@(Model.BorderImageUrl).jpg" class="banner" />
</div>

<body>
    <div class="anime-details-wrapper">
        <a asp-controller="Animes" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-secondary edit-button">
            Edit
        </a>
        <a asp-controller="Animes" asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-secondary delete-button">
            Delete
        </a>
        <div class="anime-details">
            <div>
                <img src="~/img/Animes/@(Model.ImageUrl).jpg" alt="@Model.Name" class="single-anime-cover">
                <div class="actions">
                    <div class="add-list-dropdown">
                        <button class="btn btn-dark btn-lg btn-block add-list-button">Add To List</button>
                        <div class="dropdown-content">
                            <button class="btn btn-dark btn-lg btn-block add-watching" onclick="AddToWatchingList()">Watching</button>
                            <button class="btn btn-dark btn-lg btn-block add-completed" onclick="AddToCompletedList()">Completed</button>
                            <button class="btn btn-dark btn-lg btn-block add-planning" onclick="AddToPlanToWatchList()">Plan to watch</button>
                        </div>
                    </div>

                    <button class="favorite" onclick="AddAnimeToFavorites()">

                        <svg xmlns="http://www.w3.org/2000/svg" class="favorite-icon-false" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                        </svg>

                        <svg xmlns="http://www.w3.org/2000/svg" class="favorite-icon-true" viewBox="0 0 20 20" fill="currentColor" style="display: none;">
                            <path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd" />
                        </svg>

                    </button>



                    <div class="toast" role="alert" @*aria-live="assertive" aria-atomic="true"*@>
                        @*<div class="toast-header">
                        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                        </button>
                        </div>*@
                        <div class="toast-body">
                            Updated successfully.
                        </div>
                    </div>
                </div>

            </div>

            <div class="single-anime-title-sypnosis">
                <h1 class="single-anime-name">@Model.Name</h1>
                <h3 class="single-anime-alternative">@Model.AlternativeName</h3>
                <p class="single-anime-sypnosis">@Model.Sypnosis</p>
            </div>
        </div>
    </div>
    <section class="anime-container">
        <div class="anime-container-wrapper">
            @if (@Model.RelatedAnime.AnimeId > 0)
            {
                <div class="related-anime">Related Anime: <a asp-controller="Animes" asp-action="GetById" asp-route-id="@Model.RelatedAnime.AnimeId">@Model.RelatedAnime.AnimeName</a></div>
            }

            @*<div class="genres">
            @foreach (var genre in @Model.Genres)
            {
            <a class="genre-link">@genre.Name</a>
            }
            </div>*@
            <div class="anime-content">
                <div class="sidebar-content">
                    <div class="sidebar-type">
                        <div class="type-title">Type</div>
                        <div class="type-content">@Model.Type</div>
                    </div>
                    <div class="sidebar-episodes">
                        <div class="epidoes-title">Episodes</div>
                        <div class="episodes-content">@Model.Episodes</div>
                    </div>
                    <div class="sidebar-status">
                        <div class="status-title">Status</div>
                        <div class="status-content">@Model.Status</div>
                    </div>
                    <div class="sidebar-aired">
                        <div class="aired-title">Aired</div>
                        <div class="aired-content">@Model.Aired</div>
                    </div>
                    <div class="sidebar-favorites">
                        <div class="favorites-title">Favorites</div>
                        <div class="favorites-content">@Model.Favorites</div>
                    </div>
                    <div class="sidebar-score">
                        <div class="score-title">Score</div>
                        <div class="score-content">@Model.Score</div>
                    </div>
                    <div class="sidebar-source">
                        <div class="source-title">Source</div>
                        <div class="source-content">@Model.Source</div>
                    </div>
                    <div class="sidebar-rating">
                        <div class="rating-title">Rating</div>
                        <div class="rating-content">@Model.Rating</div>
                    </div>
                    <div class="genres">
                        <div class="genres-title">Genres</div>
                        @foreach (var genre in @Model.Genres)
                        {
                            <div class="genre-link">@genre.Name</div>
                        }
                    </div>
                </div>
                <div class="characters-recommendation">
                    <div class="characters">
                        <h3 class="characters-title">Characters</h3>
                        <div class="characters-grid">
                            @foreach (var character in @Model.Characters)
                            {

                                <div class="character">

                                    <a asp-controller="Characters" asp-action="GetById" asp-route-id="@character.CharacterId"><img src="~/img/Characters/@(character.ImageUrl).jpg" alt="@character.Name" class="character-img"></a>
                                    <div class="character-details">
                                        <a asp-controller="Characters" asp-action="GetById" asp-route-id="@character.CharacterId"><h5 id="character-name">@character.Name</h5></a>
                                        <p class="character-role">@character.Role</p>
                                        <div class="staff">
                                            <div>V.A: @character.Voice</div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>

                    </div>
                    <div class="recommendations">
                        <h3 class="recommendations-title">Recommendations</h3>
                        <div class="recommendations-grid">
                            @foreach (var recc in @Model.Recommendations)
                            {
                                <div class="reccomendation-item">
                                    <a asp-controller="Animes" asp-action="GetById" asp-route-id="@recc.AnimeId"><img src="~/img/Animes/@(recc.AnimeImageUrl).jpg" alt="@recc.AnimeName" class="reccomendation-anime-img" /></a>
                                </div>
                            }
                        </div>
                    </div>

                </div>



            </div>

        </div>

    </section>

</body>

@section Scripts {
    <script>

        const favoriteIconFalse = $('.favorite-icon-false');
        const favoriteIconTrue = $('.favorite-icon-true');


        const UpdateListButtons = (action) => {

            const addListElement = $('.add-list-button');
            const watchingElement = $('.add-watching');
            const completedElement = $('.add-completed');
            const planElement = $('.add-planning');

            switch (action) {
                case 'Watching':
                    watchingElement.hide();
                    completedElement.show();
                    planElement.show();
                    break;

                case 'Completed':
                    completedElement.hide();
                    watchingElement.show();
                    planElement.show();
                    break;

                case "Plan To Watch":
                    planElement.hide();
                    completedElement.show();
                    watchingElement.show();
                    break;

                default:
                    console.log("erroooor");
            }

            $(addListElement)[0].innerHTML = action;

        }

        const Toasty = () => {

            const options = {
                animation: true,
                autohide: true,
                delay: 2500
            };

            const toast = $('.toast').toast(options);
            toast.toast('show');
        }



        const checkUserList = () => {

            let CheckIfAnimeInList = $.ajax({
                type: 'GET',
                url: '/api/AddToList/CheckUserList/@Model.Id',

                success: function () {

                    const responseText = CheckIfAnimeInList.responseText;

                    UpdateListButtons(responseText);

                }
            });

            let checkIfAnimeInFavorites = $.ajax({
                type: 'GET',
                url: '/api/Favorites/Anime/@Model.Id',

                success: function () {

                    const responseText = checkIfAnimeInFavorites.responseText;

                    console.log(responseText);
                    if (responseText == "true") {
                        favoriteIconFalse.css('display', 'none');
                        favoriteIconTrue.css('display', 'inline')
                    }
                    else {
                        favoriteIconTrue.css('display', 'none');
                        avoriteIconFalse.css('display', 'inline');
                    }

                }

            });


        }

        document.addEventListener('DOMContentLoaded', checkUserList);

        const AddAnimeToFavorites = () => {

            $.ajax({
                type: 'POST',
                url: '/api/Favorites/Anime/@Model.Id',
                
                success: function() {
                    

                    if(favoriteIconFalse.css('display') == 'none'){
                        favoriteIconTrue.css('display', 'none');
                        favoriteIconFalse.css('display', 'inline');
                    }
                    else {
                        favoriteIconTrue.css('display', 'inline');
                        favoriteIconFalse.css('display', 'none');
                    }
                }
                });
        }


        const AddToWatchingList = () => {

            $.ajax({
                type: 'POST',
                url: '/api/AddToList/Watching/@Model.Id',
                success: function () {

                    UpdateListButtons('Watching')
                    Toasty();
                }

            });


        }

        const AddToCompletedList = () => {

            $.ajax({
                type: 'POST',
                url: '/api/AddToList/Completed/@Model.Id',
                success: function () {

                    UpdateListButtons('Completed')
                    Toasty();
                }


            });


        }

        const AddToPlanToWatchList = () => {

            $.ajax({
                type: 'POST',
                url: '/api/AddToList/PlanToWatch/@Model.Id',
                success: function () {

                    UpdateListButtons('Plan To Watch')
                    Toasty();
                }

            });


        }
    </script>
}